server:
  port: 8080

spring:
  application:
    name: gateway-service

  cloud:
    gateway:
      discovery:
        locator:
          enabled: true
          lower-case-service-id: true

      routes:
        - id: incident-service
          uri: lb://incident-service
          predicates:
            - Path=/incident-service/**
          filters:
            - StripPrefix=1
            - name: Retry
              args:
                retries: 2
                statuses: BAD_GATEWAY, SERVICE_UNAVAILABLE, GATEWAY_TIMEOUT
                methods: GET, POST, PUT, DELETE
            - name: CircuitBreaker
              args:
                name: IncidentCircuitBreaker
                fallbackUri: forward:/fallback/incident

        - id: moderation-service
          uri: lb://moderation-service
          predicates:
            - Path=/moderation-service/**
          filters:
            - StripPrefix=1
            - name: Retry
              args:
                retries: 2
                statuses: BAD_GATEWAY, SERVICE_UNAVAILABLE, GATEWAY_TIMEOUT
                methods: GET, POST, PUT, DELETE
            - name: CircuitBreaker
              args:
                name: ModerationCircuitBreaker
                fallbackUri: forward:/fallback/moderation

eureka:
  client:
    serviceUrl:
      defaultZone: http://discovery-server:8761/eureka/

  instance:
    prefer-ip-address: true
    instance-id: ${spring.application.name}:${random.uuid}
    lease-renewal-interval-in-seconds: 5
    lease-expiration-duration-in-seconds: 10
    metadata-map:
      instanceId: ${spring.application.name}:${random.uuid}

resilience4j.circuitbreaker:
  configs:
    default:
      registerHealthIndicator: true
      slidingWindowSize: 5
      minimumNumberOfCalls: 3
      failureRateThreshold: 50
      waitDurationInOpenState: 5s
      permittedNumberOfCallsInHalfOpenState: 2
      automaticTransitionFromOpenToHalfOpenEnabled: true
      recordExceptions:
        - java.net.ConnectException
        - java.net.NoRouteToHostException
        - java.net.UnknownHostException
        - java.io.IOException
        - org.springframework.web.reactive.function.client.WebClientRequestException
        - org.springframework.web.reactive.function.client.WebClientResponseException
        - org.springframework.web.server.ServerWebInputException
        - org.springframework.web.server.ResponseStatusException
  instances:
    IncidentCircuitBreaker:
      baseConfig: default
    ModerationCircuitBreaker:
      baseConfig: default

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always
  health:
    circuitbreakers:
      enabled: true
